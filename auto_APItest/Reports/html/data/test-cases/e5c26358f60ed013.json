{
  "uid" : "e5c26358f60ed013",
  "name" : "test_002",
  "fullName" : "TestCases.test_01.TestExchange#test_002",
  "historyId" : "4852f8a856c7054b2bc974c95a71170a",
  "time" : {
    "start" : 1589946260014,
    "stop" : 1589946260017,
    "duration" : 3
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <TestCases.test_01.TestExchange object at 0x04388D10>\n\n    @allure.story('用例2')\n    def test_002(self):\n        _assert = Assert.Assert()\n>       assert _assert.assert_body(1,2)\n\nTestCases\\test_01.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Utils.Assert.Assert object at 0x04388AD0>, body = 1, assert_body = 2\n\n    def assert_body(self,body,assert_body):\n        '''\n        请求响应body断言\n        :data body:\n        :data assert_body:\n        :return:\n        '''\n        try:\n>           assert body == assert_body\nE           AssertionError\n\nUtils\\Assert.py:35: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <TestCases.test_01.TestExchange object at 0x04388D10>\n\n    @allure.story('用例2')\n    def test_002(self):\n        _assert = Assert.Assert()\n>       assert _assert.assert_body(1,2)\n\nTestCases\\test_01.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Utils.Assert.Assert object at 0x04388AD0>, body = 1, assert_body = 2\n\n    def assert_body(self,body,assert_body):\n        '''\n        请求响应body断言\n        :data body:\n        :data assert_body:\n        :return:\n        '''\n        try:\n>           assert body == assert_body\nE           AssertionError\n\nUtils\\Assert.py:35: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cc807d3c64f7eaec",
      "name" : "log",
      "source" : "cc807d3c64f7eaec.txt",
      "type" : "text/plain",
      "size" : 106
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "用例2"
  }, {
    "name" : "feature",
    "value" : "小额资产兑换"
  }, {
    "name" : "parentSuite",
    "value" : "TestCases"
  }, {
    "name" : "suite",
    "value" : "test_01"
  }, {
    "name" : "subSuite",
    "value" : "TestExchange"
  }, {
    "name" : "host",
    "value" : "DESKTOP-8TLGUH8"
  }, {
    "name" : "thread",
    "value" : "932-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCases.test_01"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e5c26358f60ed013.json",
  "parameterValues" : [ ]
}